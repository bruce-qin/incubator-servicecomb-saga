<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>alpha</artifactId>
    <groupId>org.apache.servicecomb.saga</groupId>
    <version>0.2.1</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>alpha-server</artifactId>
  <name>Saga::Alpha::Server</name>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.servicecomb.saga</groupId>
      <artifactId>pack-contract-grpc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.servicecomb.saga</groupId>
      <artifactId>alpha-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.servicecomb.saga</groupId>
      <artifactId>pack-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.servicecomb.saga</groupId>
      <artifactId>saga-persistence-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.seanyinx</groupId>
      <artifactId>unit-scaffolding</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.interceptor</groupId>
      <artifactId>javax.interceptor-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <!-- mixin plugin configurations declared in another pom,
      just like importing dependencies managed in another pom -->
      <plugin>
        <groupId>com.github.odavid.maven.plugins</groupId>
        <artifactId>mixin-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>org.apache.servicecomb.saga.alpha.server.AlphaApplication</mainClass>
          <fork>true</fork>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.ethlo.persistence.tools</groupId>
        <artifactId>eclipselink-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <!--<plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
              <configuration>
                  <dockerHost>tcp://192.168.200.125:2375</dockerHost>
                <images>
                  <image>
                    <name>saga/${project.artifactId}</name> &lt;!&ndash;生成的image名&ndash;&gt;
                    <alias>${project.artifactId}</alias>
                    <build>
                      <from>java:8u111-jre</from>
                      <tags>
                        <tag>latest</tag>
                        &lt;!&ndash;<tag>${project.version}</tag>&ndash;&gt;
                      </tags>
                      <ports>
                        <port>8899,8989</port>
                      </ports>
                      <volumes>
                        <volume>/usr/local/src/saga</volume>
                      </volumes>
                      <buildOptions>
                        <shmsize>2147483648</shmsize>
                      </buildOptions>

                      <entryPoint>
                        &lt;!&ndash; exec form for ENTRYPOINT &ndash;&gt;
                        <exec>
                          <arg>java</arg>
                          <arg>-jar</arg>  &lt;!&ndash;启动参数&ndash;&gt;
                          <arg>/usr/local/src/saga/${project.artifactId}.jar</arg>
                        </exec>
                      </entryPoint>

                      <assembly>
                        <mode>dir</mode>
                        <basedir>/</basedir>
                        <descriptor>assembly.xml</descriptor>
                      </assembly>
                    </build>
                    <run>
                      <namingStrategy>alias</namingStrategy>  &lt;!&ndash;container全名规则&ndash;&gt;
                      <ports>
                        <port>8899:8899,8989:8989</port> &lt;!&ndash;端口映射&ndash;&gt;
                      </ports>
                    </run>
                  </image>
                </images>
              </configuration>
          </plugin>-->
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- optionally overwrite tags every time image is built with docker:build -->
              <dockerHost>http://192.168.200.125:2375</dockerHost>
              <forceTags>true</forceTags>
              <imageTags>
                <imageTag>latest</imageTag>
              </imageTags>
              <imageName>saga/${project.build.finalName}</imageName>
              <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
              <resources>
                <resource>
                  <targetPath>/</targetPath>
                  <directory>${project.build.directory}</directory>
                  <include>${project.build.finalName}-exec.jar</include>
                </resource>
              </resources>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.commonjava.maven.plugins</groupId>
            <artifactId>directory-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>spring-boot-2</id>
      <properties>
        <spring.boot.version>${spring.boot2.version}</spring.boot.version>
      </properties>
      <!-- Need to add the dependency of log4j2 core -->
      <dependencies>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>2.6.2</version>
        </dependency>
        <dependency>
          <groupId>com.lmax</groupId>
          <artifactId>disruptor</artifactId>
          <version>3.3.7</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
